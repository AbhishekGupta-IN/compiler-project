<program>	:	<moduleDeclarations> <otherModules> <driverModule> <otherModules>
<moduleDeclarations>	:	<moduleDeclaration> <moduleDeclarations>
<moduleDeclarations>	:	EMPTY
<moduleDeclaration>	:	DECLARE MODULE ID SEMICOL
<otherModules>	:	<module> <otherModules>
<otherModules>	:	EMPTY
<driverModule>	:	DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef>
<module>	:	DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret> <moduleDef>
<ret>	:	RETURNS SQBO <output_plist> SQBC SEMICOL
<ret>	:	EMPTY
<input_plist>	:	ID COLON <dataType> <input_plist*>
<input_plist*>	:	COMMA ID COLON <dataType> <input_plist*>
<input_plist*>	:	EMPTY
<output_plist>	:	ID COLON <type> <output_plist*>
<output_plist*>	:	COMMA ID COLON <type> <output_plist*>
<output_plist*>	:	EMPTY
<dataType>	:	INTEGER
<dataType>	:	REAL
<dataType>	:	BOOLEAN
<dataType>	:	ARRAY SQBO <range_arrays> SQBC OF <type>
<range_arrays>	:	<index> RANGEOP <index>
<type>	:	INTEGER
<type>	:	REAL
<type>	:	BOOLEAN
<moduleDef>	:	START <statements> END
<statements>	:	<statement> <statements>
<statements>	:	EMPTY
<statement>	:	<ioStmt>
<statement>	:	<simpleStmt>
<statement>	:	<declareStmt>
<statement>	:	<condionalStmt>
<statement>	:	<iterativeStmt>
<ioStmt>	:	GET_VALUE BO ID BC SEMICOL
<ioStmt>	:	PRINT BO <var> BC SEMICOL
<var>	:	<var_id_num>
<var>	:	<boolConstt>
<var_id_num>	:	ID <whichId>
<var_id_num>	:	NUM
<var_id_num>	:	RNUM
<boolConstt>	:	TRUE
<boolConstt>	:	FALSE
<whichId>	:	SQBO <index> SQBC
<whichId>	:	EMPTY
<simpleStmt>	:	<assignmentStmt>
<simpleStmt>	:	<moduleReuseStmt>
<assignmentStmt>	:	ID <whichStmt>
<whichStmt>	:	<lvalueIDStmt>
<whichStmt>	:	<lvalueARRStmt>
<lvalueIDStmt>	:	ASSIGNOP <expression> SEMICOL
<lvalueARRStmt>	:	SQBO <index> SQBC ASSIGNOP <expression> SEMICOL
<index>	:	NUM
<index>	:	ID
<moduleReuseStmt>	:	<optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL
<optional>	:	SQBO <idList> SQBC ASSIGNOP
<optional>	:	EMPTY
<idList>	:	ID <idList*>
<idList*>	:	COMMA ID <idList*>
<idList*>	:	EMPTY
<expression>	:	<booleanExpr> <expression*>
<expression>	:	<U>
<expression*>	:	<logicalOp> <booleanExpr> <expression*>
<expression*>	:	EMPTY
<booleanExpr>	:	<arithmeticExpr> <otherExpr>
<otherExpr>	:	<relationalOp> <arithmeticExpr>
<otherExpr>	:	EMPTY
<arithmeticExpr>	:	<term> <arithmeticExpr*>
<arithmeticExpr*>	:	<op1> <term> <arithmeticExpr*>
<arithmeticExpr*>	:	EMPTY
<term>	:	<factor> <term*>
<term*>	:	<op2> <factor> <term*>
<term*>	:	EMPTY
<factor>	:	BO <expression> BC
<factor>	:	<var>
<U>	:	MINUS <V>
<U>	:	PLUS <V>
<V>	:	BO <arithmeticExpr> BC
<V>	:	<var_id_num>
<op1>	:	PLUS
<op1>	:	MINUS
<op2>	:	MUL
<op2>	:	DIV
<logicalOp>	:	AND
<logicalOp>	:	OR
<relationalOp>	:	LT
<relationalOp>	:	LE
<relationalOp>	:	GT
<relationalOp>	:	GE
<relationalOp>	:	EQ
<relationalOp>	:	NE
<declareStmt>	:	DECLARE <idList> COLON <dataType> SEMICOL
<condionalStmt>	:	SWITCH BO ID BC START <caseStmt> <default> END
<caseStmt>	:	CASE <value> COLON <statements> BREAK SEMICOL <caseStmt*>
<caseStmt*>	:	CASE <value> COLON <statements> BREAK SEMICOL <caseStmt*>
<caseStmt*>	:	EMPTY
<value>	:	NUM
<value>	:	TRUE
<value>	:	FALSE
<default>	:	DEFAULT COLON <statements> BREAK SEMICOL
<default>	:	EMPTY
<iterativeStmt>	:	FOR BO ID IN <range> BC START <statements> END
<iterativeStmt>	:	WHILE BO <expression> BC START <statements> END
<range>	:	NUM RANGEOP NUM
